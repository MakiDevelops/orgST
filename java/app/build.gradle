/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}
def cmsg = "Updated Java Port"
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava
    implementation 'com.google.code.gson:gson:2.13.1'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.11.3')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.orgst.App'
}

tasks.register('mkJar', Jar) {
    dependsOn classes
    group = 'build'
    description = 'Creates fat JAR with dependencies'

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveClassifier.set('all')

    manifest {
        attributes('Main-Class': application.mainClass.get())
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from sourceSets.main.output
}


task upload(type: Exec) {
    dependsOn mkJar
    commandLine 'bash', '-c', "cd ~/coding/orgST && git add . && git commit -m '${cmsg}' &&  git push origin java"
    
    // Ensure the output and error are printed to the console
    standardOutput = System.out
    errorOutput = System.err
    ignoreExitValue = true  // This allows the task to continue even if some commands fail
}

build.dependsOn upload